import 'package:flutter/material.dart';
import 'package:imail_flutter/utils/GMColors.dart';
import 'package:nb_utils/nb_utils.dart';

class GmConfidentialScreen extends StatefulWidget {
  @override
  _GmConfidentialScreenState createState() => _GmConfidentialScreenState();
}

class _GmConfidentialScreenState extends State<GmConfidentialScreen> {
  bool isSwitched = false;
  String? _selectedExpiryText;
  String? _selectedPassCodeText;
  List<String> _expiry = ['Expiry in 1 day', 'Expiry in 1 week', 'Expiry in 1 month', 'Expiry in 3 months', 'Expiry in 5 years'];
  List<String> _passCode = ['Standard', 'SMS passCode'];

  @override
  void initState() {
    super.initState();
    init();
  }

  init() async {}

  @override
  void setState(fn) {
    if (mounted) super.setState(fn);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: EdgeInsets.fromLTRB(16, 35, 16, 16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: [
                FlatButton.icon(
                    onPressed: () {
                      finish(context);
                    },
                    icon: Icon(Icons.clear),
                    label: Text('CANCEL')),
                FlatButton.icon(
                    onPressed: () {
                      finish(context);
                    },
                    icon: Icon(Icons.check),
                    label: Text('SAVE')),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text('Confidential mode', style: primaryTextStyle()),
                Switch(
                  value: isSwitched,
                  onChanged: (value) {
                    setState(() {
                      isSwitched = value;
                    });
                  },
                  activeTrackColor: GMGreyColor.withOpacity(0.3),
                  activeColor: GMBlueColor,
                  inactiveTrackColor: GMGreyColor.withOpacity(0.3),
                )
              ],
            ),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Divider(color: GMAppDividerColor),
                Text('Set expiry', style: boldTextStyle()),
                DropdownButton(
                    hint: Text('Expiry in 1 day'),
                    value: _selectedExpiryText,
                    onChanged: (dynamic newValue) {
                      setState(() {
                        _selectedExpiryText = newValue;
                      });
                    },
                    items: _expiry.map((location) {
                      return DropdownMenuItem(
                        child: new Text(location),
                        value: location,
                      );
                    }).toList()),
                Divider(color: GMAppDividerColor),
                Text('Require passcode', style: boldTextStyle()),
                8.height,
                Text(
                  'All passcode will be generated by Google.Non-Gmail recipients will get an email passcode to authenticate.',
                  style: primaryTextStyle(size: 14),
                ),
                8.height,
                DropdownButton(
                    hint: Text('Standard'),
                    value: _selectedPassCodeText,
                    onChanged: (dynamic newValue) {
                      setState(() {
                        _selectedPassCodeText = newValue;
                      });
                    },
                    items: _passCode.map((location) {
                      return DropdownMenuItem(
                        child: new Text(location),
                        value: location,
                      );
                    }).toList()),
                Divider(color: GMAppDividerColor),
                FlatButton.icon(
                  onPressed: () {},
                  icon: Icon(Icons.add),
                  label: Text('Learn more', style: primaryTextStyle(color: GMBlueColor)),
                )
              ],
            ).visible(isSwitched)
          ],
        ),
      ),
    );
  }
}
